dataset: "nuscenes"
working_dir: "output/panseg/nuscenes/25pt/finetune/cylinder3d_pure/g2b16"
# if set to True, use cylindrical coordinates, otherwise use cartesian
cylindrical_coordinates: True
# size of the voxel in each dimension for cartesian coordinates,
# and in rho and z for cylindrical (angular is always 1°)
#voxel_size: 0.1
batch_size: 8  # 32
#batch_size: 8 # 32
# learning rate

# --------------------------------
optimizer: 'adam'  # adam
lr: 0.004
scheduler: 'multi_steplr'  #  multi_steplr
lr_milestones: [ 30,50,80 ]
LR_GAMMA: 0.5
num_epochs: 100

lr_head: 0.2  #
# --------------------------------
# number of GPUs and CPU threads to use
num_gpus: 2  # 2
num_threads: 16
# 3D convolution kernel size
kernel_size: 3
bn_momentum: 0.02
# whether to use the true validation set or the custom parametrization set
training: "validate"  # 'parametrize'
# lovasz is actually a sum of both losses
loss: "lovasz"  # "crossentropy"
# use the frozen backbone setup
freeze_layers: False
# transformations to apply
transforms_clouds: [ "Rotation", "FlipAxis" ]
# only keep 1 in dataset_skip_step training examples (here use 1% of the data)
dataset_skip_step: 4  #
#dataset_skip_step : 100
# path to the pretraining weights to use. None is random initialization
pretraining_path: Null
# path to downstream weights to continue a previous training
resume_path: Null
# Where to log results for evaluate
log_evaluate: Null


# WARNING: DO NOT CHANGE THE FOLLOWING PARAMETERS
# ===============================================
model_n_out: 17  # 17 for nuScenes; 20 for semantickitti
ignore_index: 0
normalize_features: False
########
use_polar: True
model_points: 'cylinder3d'  # cylinder3d  or voxelnet
pure: True
output_dim_model_points: 64  # 3d backbnone的输出1
panoptic_model: "panoptic_polarnet"

panoptic_eval_min_points: 15 #
val_interval: 5

